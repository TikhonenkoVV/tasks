{"version":3,"file":"static/js/614.69b97c20.chunk.js","mappings":"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","sources":["components/MainDashboard/ColumnForm.styled.js","components/MainDashboard/ColumnForm.jsx","components/MainDashboard/Column.styled.js","components/Card/CardList.styled.js","components/Card/Card.styled.js","components/AddTaskForm/AddTaskForm.styled.js","components/AddTaskForm/TaskForm.jsx","components/AddTaskForm/EditTaskForm.jsx","components/Card/Card.jsx","store/filter/selectors.js","components/Card/CardList.jsx","components/AddTaskForm/AddTaskForm.jsx","components/MainDashboard/Column.jsx","components/MainDashboard/ColunmList.styled.js","components/MainDashboard/ColunmList.jsx","components/MainDashboard/CreateBoard.styled.js","components/MainDashboard/CreateBoard.jsx","pages/MainDashboard/MainDashboard.styled.js","components/StatusFilterButton/StatusFilterButton.styled.js","components/StatusFilterButton/StatusFilterButton.jsx","components/StatusFilter/StatusFilter.styled.js","components/StatusFilter/StatusFilter.jsx","components/DashboardHeader/DashboardHeader.styled.js","components/DashboardHeader/DashboardHeader.jsx","pages/MainDashboard/MainDashboard.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\nimport { baseTransition } from 'styles';\n\nexport const FormTitle = styled.p`\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  color: ${props => props.theme.colors.formTitleColor};\n`;\n\nexport const FormInput = styled(Field)`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  font-size: 14px;\n  font-weight: 400;\n  color: ${props => props.theme.colors.formInputColor};\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background-color: ${props => props.theme.colors.formInputBackground};\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.formInputBorderColor};\n  opacity: 0.4;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    outline: none;\n  }\n\n  transition: background ${baseTransition};\n`;\n\nexport const ValidationError = styled.p`\n  margin-top: 6px;\n  color: #ed4337;\n  font-size: 12px;\n`;\n\nexport const TitleContainer = styled.div`\n  margin-bottom: 24px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { addColumn, editColumn } from '../../store/columns/operations';\nimport * as Yup from 'yup';\n\nimport {\n  FormTitle,\n  FormInput,\n  ValidationError,\n  TitleContainer,\n} from './ColumnForm.styled';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from 'store/columns/selectors';\nimport { PrimaryButton } from 'components/miniComponents/PrimaryButton/PrimaryButton';\nimport { IconAddEditDeleteModal } from 'components/miniComponents/IconAddEditDeleteModal/IconAddEditDeleteModal';\nimport { ModalContent } from 'components/Modal/Modal.styled';\nimport { ButtonIcon } from 'components/miniComponents/ButtonIcon/ButtonIcon';\n\nconst ColumnFormSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Please write more than 2 symbol!')\n    .max(32, 'Please write less than 32 symbols!'),\n});\n\nexport const ColumnForm = ({\n  id,\n  boardId,\n  isEditMode,\n  onCloseForm,\n  columnTitle = '',\n}) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const index = columns.length;\n  const title = isEditMode ? 'Edit column' : 'Add column';\n  const buttonText = isEditMode ? 'Edit' : 'Add';\n  const icon = isEditMode ? 'pencil' : 'plus';\n\n  const handleSubmit = ({ title }, { resetForm }) => {\n    if (isEditMode) {\n      dispatch(editColumn({ boardId, id, title, index }));\n    } else {\n      title = title === '' ? `Column ${index + 1}` : title;\n      dispatch(addColumn({ boardId, title, index }));\n    }\n    resetForm();\n    onCloseForm();\n  };\n\n  return (\n    <ModalContent>\n      <ButtonIcon\n        action={onCloseForm}\n        style={{\n          position: 'absolute',\n          top: '14px',\n          right: '14px',\n        }}\n      />\n      <FormTitle>{title}</FormTitle>\n      <Formik\n        initialValues={{\n          title: columnTitle,\n        }}\n        validationSchema={ColumnFormSchema}\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <TitleContainer>\n              <FormInput id=\"title\" name=\"title\" placeholder=\"Title\" />\n              {errors.title && touched.title ? (\n                <ValidationError>{errors.title}</ValidationError>\n              ) : null}\n            </TitleContainer>\n            <PrimaryButton title={buttonText}>\n              <IconAddEditDeleteModal icon={icon} />\n            </PrimaryButton>\n          </Form>\n        )}\n      </Formik>\n    </ModalContent>\n  );\n};\n","import styled from '@emotion/styled';\nimport { baseTransition } from 'styles';\n\nexport const ColumnContainer = styled.div`\n  max-width: 335px;\n`;\n\nexport const ColumnTitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 14px;\n  padding: 18px 20px 17px 20px;\n  height: 56px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.card};\n`;\n\nexport const ColumnTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.colors.titleColor};\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  width: 40px;\n  height: 16px;\n`;\n\nexport const TitleIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: ${props => props.theme.colors.iconFill};\n  transition: fill ${baseTransition};\n  &:hover,\n  &:focus {\n    fill: ${props => props.theme.colors.iconHover};\n  }\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from '@emotion/styled';\nimport { devices } from 'styles';\n\nexport const CardListContainer = styled.div`\n  max-height: calc(100svh - 336px);\n  height: 100%;\n  min-width: 350px;\n  margin-bottom: 14px;\n\n  @media screen and (${devices.tablet}) {\n    max-height: calc(100svh - 356px);\n  }\n\n  @media screen and (${devices.desktop}) {\n    max-height: calc(100vh - 293px);\n  }\n`;\n\nexport const CardListStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 335px;\n  min-height: 100%;\n`;\n\nexport const TrackVertical = styled.div`\n  background-color: ${props =>\n    props.theme.colors.columnTrackVerticalBackground};\n  right: 0;\n  bottom: 0;\n  top: 2px;\n  border-radius: 12px;\n  width: 8px !important;\n`;\n\nexport const ThumbVertical = styled.div`\n  border-radius: 12px;\n  background-color: ${props =>\n    props.theme.colors.columnThumbVerticalBackground};\n`;\n","import styled from '@emotion/styled';\nimport { priority } from 'styles';\n\nexport const CardStyled = styled.div`\n  position: relative;\n  height: 154px;\n  width: 100%;\n  padding: 14px 24px;\n  border-radius: 8px;\n  background-color: ${props => props.theme.colors.card};\n  overflow: hidden;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 4px;\n    height: 100%;\n    background-color: ${props => priority[props.color]};\n  }\n`;\n\nexport const CardTitleStyled = styled.h3`\n  margin-bottom: 8px;\n  font-size: 14px;\n  line-height: 1.5;\n  font-weight: 600;\n  color: ${props => props.theme.colors.cardMajorText};\n`;\n\nexport const CardDescriptionStyled = styled.p`\n  width: 290px;\n  height: 2rem;\n  margin-bottom: 34px;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.3333;\n  color: ${props => props.theme.colors.cardMinorText};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nexport const CardFooter = styled.div`\n  position: relative;\n  display: flex;\n  align-items: flex-end;\n  &::before {\n    content: '';\n    position: absolute;\n    top: -14px;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${props => props.theme.colors.cardDecor};\n    z-index: 1;\n  }\n`;\n\nexport const CardParamsWrapper = styled.div`\n  display: flex;\n  gap: 14px;\n  margin-right: auto;\n`;\n\nexport const CardParamsTitle = styled.p`\n  margin-bottom: 4px;\n  font-size: 8px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMinorText};\n`;\n\nexport const PriorityStatus = styled.p`\n  position: relative;\n  margin-left: 16px;\n  text-transform: capitalize;\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMajorText};\n  &::before {\n    content: '';\n    position: absolute;\n    top: 1.5px;\n    left: -16px;\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: ${props => priority[props.color]};\n  }\n`;\n\nexport const DeadlineDate = styled.p`\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${props => props.theme.colors.cardMajorText};\n`;\n\nexport const ToolsWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const ToolsButtonBell = styled.button`\n  position: relative;\n  width: 16px;\n  height: 16px;\n  margin-right: 12px;\n  color: #888888;\n  fill: #888888;\n  cursor: auto;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 30px;\n    height: 30px;\n    transform: translate(-50%, -50%);\n    background-image: ${props =>\n      props.pastDeadline\n        ? 'radial-gradient(circle, red 0%, rgba(255, 0, 0, 0) 70%)'\n        : 'radial-gradient(circle, #bedbb070 0%, #bedbb000 70%)'};\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const StyledContainerCardHeder = styled.div`\n  display: flex;\n`;\n\nexport const StyledP = styled.p`\n  display: inline-block;\n  color: ${props => props.theme.colors.cardMajorText};\n  font-size: 18px;\n  margin-bottom: 24px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  border: 1px solid ${props => props.theme.colors.btnAddBoard};\n  border-radius: 8px;\n  opacity: 0.4;\n  background: ${props => props.theme.colors.card};\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  margin-bottom: 14px;\n  outline: none;\n  padding: 14px 18px;\n  font-size: 14px;\n  color: ${props => props.theme.colors.cardMajorText};\n  :focus-visible {\n    opacity: 1;\n  }\n`;\n\nexport const StyledTextArea = styled.textarea`\n  resize: none;\n  width: 100%;\n  height: 154px;\n  font-size: 14px;\n  color: ${props => props.theme.colors.cardMajorText};\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.btnAddBoard};\n  opacity: 0.4;\n  background: ${props => props.theme.colors.card};\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  margin-bottom: 24px;\n  outline: none;\n  transition: border-color 0.3s ease-in-out;\n  :focus {\n    opacity: 1;\n  }\n`;\n\nexport const StyledTitelBtn = styled.label`\n  color: ${props => props.theme.colors.cardMinorText};\n  font-size: 12px;\n`;\n\nexport const Container = styled.div`\n  color: ${props => props.theme.colors.btnAddBoard};\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: ${props => props.theme.colors.btnAddBoard};\n  justify-content: left;\n  align-items: center;\n  display: flex;\n  &.disabled {\n    color: ${props => props.theme.colors.cardMinorText};\n  }\n`;\n\nexport const RadioGroup = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const RadioLabel = styled.label`\n  display: flex;\n  align-items: center;\n  margin-right: 10px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nexport const RadioInput = styled.input`\n  position: relative;\n  margin-bottom: 14px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${props => props.theme.priority[props.priority]};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 1px;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: ${props => props.theme.colors.filterDecorativeElement};\n    background-color: ${props => props.theme.priority[props.priority]};\n    opacity: ${props => (props.checked ? '1' : ' 0')};\n  }\n`;\n\nexport const StyledTitleDeadline = styled.div`\n  color: ${props => props.theme.colors.cardMinorText};\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  &.disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`;\n\nexport const StyledFormikTitleNotification = styled.div`\n  margin-bottom: 5px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n\nexport const StyledFormikDescriptionNotification = styled.div`\n  margin-top: -15px;\n  color: #ed4337;\n  font-size: 12px;\n`;\n\nexport const StyledFormikColorNotification = styled.div`\n  margin-top: -5px;\n  color: ${props => props.theme.colors.btnAddColumn};\n  font-size: 12px;\n`;\n\nexport const DatePickerContainer = styled.div`\n  .react-datepicker {\n    border-radius: 8px;\n    border: 1px solid #bedbb0;\n    background: ${props => props.theme.colors.calendarBackGround};\n  }\n\n  .react-datepicker-popper {\n    margin-left: 130px;\n    margin-top: -25px;\n  }\n\n  .react-datepicker__header {\n    background-color: ${props => props.theme.colors.calendarBackGround};\n  }\n\n  .react-datepicker__current-month {\n    color: ${props => props.theme.colors.calendarNumberColor};\n  }\n\n  .react-datepicker__day-name {\n    color: ${props => props.theme.colors.calendarNumberColor};\n  }\n\n  .react-datepicker__day {\n    color: ${props => props.theme.colors.calendarNumberColor};\n    cursor: pointer;\n    transition: background-color 0.2s ease;\n    border-radius: 50%;\n\n    &:active,\n    &:hover {\n      background-color: ${props => props.theme.colors.calendarSelectedColor};\n    }\n  }\n\n  .react-datepicker__day--keyboard-selected {\n    background-color: ${props => props.theme.colors.btnAddBoard};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--today.react-datepicker__day--selected {\n    background-color: ${props => props.theme.colors.calendarSelectedColor};\n  }\n\n  .react-datepicker__day--today:not(.react-datepicker__day--selected):hover {\n    background-color: ${props => props.theme.colors.calendarSelectedColor};\n    color: black;\n  }\n\n  .react-datepicker__day--selected:hover {\n    background-color: ${props => props.theme.colors.calendarSelectedColor};\n  }\n\n  .react-datepicker__day--disabled {\n    opacity: 0.3;\n  }\n`;\n\nexport const DatePickerBtn = styled.button`\n  color: ${props => props.theme.colors.btnAddBoard};\n  cursor: pointer;\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n","import React, { useState, useRef } from 'react';\nimport { useFormik } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment';\nimport * as Yup from 'yup';\nimport sprite from '../../img/icons/sprite.svg';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\nimport {\n  StyledP,\n  StyledInput,\n  StyledTextArea,\n  RadioGroup,\n  RadioInput,\n  RadioLabel,\n  StyledTitelBtn,\n  StyledTitleDeadline,\n  Container,\n  StyledFormikTitleNotification,\n  StyledFormikDescriptionNotification,\n  StyledFormikColorNotification,\n  DatePickerContainer,\n  DatePickerBtn,\n} from './AddTaskForm.styled';\nimport { PrimaryButton } from 'components/miniComponents/PrimaryButton/PrimaryButton';\nimport { IconAddEditDeleteModal } from 'components/miniComponents/IconAddEditDeleteModal/IconAddEditDeleteModal';\nimport { ModalContent } from 'components/Modal/Modal.styled';\nimport { ButtonIcon } from 'components/miniComponents/ButtonIcon/ButtonIcon';\n\nexport const colors = ['#8FA1D0', '#E09CB5', '#BEDBB0', '#808080'];\nconst priorities = ['low', 'medium', 'high', 'without'];\n\nexport const TaskForm = ({\n  title: initialTitle = '',\n  description: initialDescription = '',\n  priority: initialPriority = 'without',\n  deadline: initialDeadline,\n  onSubmit,\n  onClose,\n  isEditing = false,\n  cardsNumber,\n}) => {\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() + 1);\n\n  const initialValues = {\n    title: initialTitle,\n    description: initialDescription,\n    priority: initialPriority,\n    deadline: initialDeadline >= startDate ? initialDeadline : startDate,\n  };\n\n  const [deadline, setDeadline] = useState(startDate);\n\n  const deadlinePickerRef = useRef(null);\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(1, 'Title must contain at least 3 characters')\n      .max(32, 'Title must not exceed 50 characters'),\n    description: Yup.string()\n      .required('description is Required')\n      .min(1, 'Description must contain at least 10 characters')\n      .max(500, 'Description must not exceed 500 characters'),\n    priority: Yup.string().required('Please select a color'),\n    deadline: Yup.date(),\n  });\n\n  const handleDeadlineClick = () => {\n    if (deadlinePickerRef.current) {\n      deadlinePickerRef.current.setOpen(true);\n    }\n  };\n\n  const CurrentDate = () => {\n    const formattedDate = moment(deadline).format('D MMMM D');\n    return <div> {formattedDate}</div>;\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      values.title =\n        values.title === '' ? `Task ${cardsNumber + 1}` : values.title;\n\n      await onSubmit(values);\n      resetForm();\n      onClose();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n  });\n\n  const handleDateChange = date => {\n    formik.setFieldValue('deadline', date);\n    setDeadline(date);\n  };\n\n  const formattedDeadline = formik.values.deadline\n    ? moment(formik.values.deadline).format('D MMMM YYYY')\n    : CurrentDate();\n\n  const updateDeadline = deadline ? new Date(deadline) : null;\n\n  return (\n    <ModalContent>\n      <StyledP>{isEditing ? 'Edit Card' : 'Add Card'}</StyledP>\n      <ButtonIcon\n        ariaLabel=\"close\"\n        action={onClose}\n        style={{\n          position: 'absolute',\n          top: '14px',\n          right: '14px',\n        }}\n      />\n      <form onSubmit={formik.handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={formik.values.title}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.title && formik.errors.title ? (\n          <StyledFormikTitleNotification>\n            {formik.errors.title}\n          </StyledFormikTitleNotification>\n        ) : null}\n        <StyledTextArea\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={formik.values.description}\n          onChange={formik.handleChange}\n        />\n        {formik.touched.description && formik.errors.description ? (\n          <StyledFormikDescriptionNotification>\n            {formik.errors.description}\n          </StyledFormikDescriptionNotification>\n        ) : null}\n        <StyledTitelBtn>Label color</StyledTitelBtn>\n        <br />\n        <RadioGroup>\n          {priorities.map((priority, index) => (\n            <RadioLabel key={index}>\n              <RadioInput\n                type=\"radio\"\n                priority={priority}\n                name=\"priority\"\n                color={colors[index]}\n                value={priority}\n                checked={formik.values.priority === priority}\n                onChange={formik.handleChange}\n              />\n            </RadioLabel>\n          ))}\n        </RadioGroup>\n        {formik.touched.priority && formik.errors.priority ? (\n          <StyledFormikColorNotification>\n            {formik.errors.priority}\n          </StyledFormikColorNotification>\n        ) : null}\n\n        <StyledTitleDeadline\n          className={formik.values.priority === 'without' ? 'disabled' : ''}\n        >\n          Deadline\n          <Container\n            className={formik.values.priority === 'without' ? 'disabled' : ''}\n          >\n            {formattedDeadline}\n            <DatePickerBtn\n              type=\"button\"\n              disabled={formik.values.priority === 'without'}\n              onClick={handleDeadlineClick}\n            >\n              <svg\n                className=\"icon\"\n                width=\"14\"\n                height=\"14\"\n                aria-hidden=\"true\"\n                role=\"presentation\"\n                style={{\n                  marginLeft: '5px',\n                  fill: 'currentColor',\n                }}\n              >\n                <use xlinkHref={`${sprite}#icon-chevron-down`} />\n              </svg>\n            </DatePickerBtn>\n          </Container>\n          {formik.touched.deadline && formik.errors.deadline ? (\n            <div>{formik.errors.deadline}</div>\n          ) : null}\n          <DatePickerContainer>\n            <DatePicker\n              className=\"custom-datepicker\"\n              ref={deadlinePickerRef}\n              name=\"deadline\"\n              selected={updateDeadline}\n              onChange={handleDateChange}\n              locale=\"en\"\n              dateFormat=\"d MMMM yyyy\"\n              showTimeSelect={false}\n              customInput={<div></div>}\n              minDate={startDate}\n            />\n          </DatePickerContainer>\n        </StyledTitleDeadline>\n        <PrimaryButton title={isEditing ? 'Edit' : 'Add'}>\n          <IconAddEditDeleteModal icon={isEditing ? 'pencil' : 'plus'} />\n        </PrimaryButton>\n      </form>\n    </ModalContent>\n  );\n};\n\nTaskForm.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  priority: PropTypes.string,\n  deadline: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  isEditing: PropTypes.bool,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editTask } from '../../store/columns/operations';\nimport { TaskForm } from './TaskForm';\nimport PropTypes from 'prop-types';\n\nexport const EditTask = ({\n  boardId,\n  columnId,\n  closeModal,\n  title,\n  description,\n  priority,\n  index,\n  taskId,\n  deadline,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async values => {\n    if (values.priority === 'without') values.deadline = new Date(0);\n    try {\n      await dispatch(editTask({ ...values, index, boardId, columnId, taskId }));\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <TaskForm\n      title={title}\n      description={description}\n      priority={priority}\n      index={index}\n      taskId={taskId}\n      deadline={deadline}\n      onSubmit={handleSubmit}\n      onClose={closeModal}\n      isEditing={true}\n    />\n  );\n};\n\nEditTask.propTypes = {\n  boardId: PropTypes.string.isRequired,\n  columnId: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  priority: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  taskId: PropTypes.string.isRequired,\n  deadline: PropTypes.string.isRequired,\n};\n","import {\n  CardDescriptionStyled,\n  CardFooter,\n  CardParamsTitle,\n  CardParamsWrapper,\n  CardStyled,\n  CardTitleStyled,\n  DeadlineDate,\n  PriorityStatus,\n  ToolsButtonBell,\n  ToolsWrapper,\n} from './Card.styled';\nimport { forwardRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Modal } from 'components/Modal';\nimport { EditTask } from 'components/AddTaskForm/EditTaskForm';\nimport { deleteTask } from '../../store/columns/operations';\nimport moment from 'moment';\nimport { useAskDeleteModal } from 'hooks/useModal';\nimport { AskDeleteModal } from 'components/AskDeleteModal/AskDeleteModal';\nimport { ButtonIcon } from 'components/miniComponents/ButtonIcon/ButtonIcon';\nimport { Svg } from 'components/SvgIcon/SvgIcon';\n\nexport const Card = forwardRef(\n  (\n    {\n      _id,\n      title,\n      description,\n      priority,\n      deadline,\n      index,\n      boardId,\n      columnId,\n      taskData,\n      ...rest\n    },\n    ref\n  ) => {\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n    const { isAskDeleteModalOpen, openAskDeleteModal, closeAskDeleteModal } =\n      useAskDeleteModal();\n\n    const dispatch = useDispatch();\n\n    const [titleCard, setTitleCard] = useState('');\n\n    const openEditModal = () => {\n      setIsEditModalOpen(true);\n    };\n\n    const closeEditModal = () => {\n      setIsEditModalOpen(false);\n    };\n\n    const handleDeleteTaskButtonClick = () => {\n      openAskDeleteModal();\n      setTitleCard(`Delete card \"${title}\"?`);\n    };\n\n    const handleDeleteCard = () => {\n      dispatch(deleteTask({ boardId, columnId, taskId: _id }));\n    };\n\n    const formattedDeadline = moment(deadline).format('DD/MM/YYYY');\n\n    return (\n      <CardStyled color={priority} ref={ref} {...rest}>\n        <CardTitleStyled>{title}</CardTitleStyled>\n        <CardDescriptionStyled>{description}</CardDescriptionStyled>\n        <CardFooter>\n          <CardParamsWrapper>\n            <div>\n              <CardParamsTitle>Priority</CardParamsTitle>\n              <PriorityStatus color={priority}>{priority}</PriorityStatus>\n            </div>\n            {priority !== 'without' && (\n              <div>\n                <CardParamsTitle>Deadline</CardParamsTitle>\n                <DeadlineDate>{formattedDeadline}</DeadlineDate>\n              </div>\n            )}\n          </CardParamsWrapper>\n          {priority !== 'without' && (\n            <ToolsButtonBell\n              aria-label=\"deadline\"\n              type=\"button\"\n              pastDeadline={moment(deadline).isBefore(moment())}\n            >\n              <Svg w={16} h={16} icon=\"bell\" />\n            </ToolsButtonBell>\n          )}\n          <ToolsWrapper>\n            <ButtonIcon\n              ariaLabel=\"edit\"\n              action={openEditModal}\n              w={16}\n              h={16}\n              icon=\"pencil\"\n            />\n            {isEditModalOpen && (\n              <Modal onClose={closeEditModal}>\n                <EditTask\n                  boardId={boardId}\n                  columnId={columnId}\n                  taskId={_id}\n                  taskData={taskData}\n                  title={title}\n                  description={description}\n                  deadline={deadline}\n                  index={index}\n                  priority={priority}\n                  closeModal={closeEditModal}\n                />\n              </Modal>\n            )}\n            {isAskDeleteModalOpen && (\n              <Modal onClose={closeAskDeleteModal}>\n                <AskDeleteModal\n                  onClick={closeAskDeleteModal}\n                  handleDelete={handleDeleteCard}\n                  title={titleCard}\n                />\n              </Modal>\n            )}\n            <ButtonIcon\n              ariaLabel=\"delete\"\n              action={handleDeleteTaskButtonClick}\n              w={16}\n              h={16}\n              icon=\"trash\"\n            />\n          </ToolsWrapper>\n        </CardFooter>\n      </CardStyled>\n    );\n  }\n);\n","export const selectStatusFilter = state => state.filters.status;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport {\n  CardListContainer,\n  CardListStyled,\n  TrackVertical,\n  ThumbVertical,\n} from './CardList.styled';\nimport { Card } from './Card';\nimport { selectStatusFilter } from 'store/filter/selectors';\n\nexport const CardList = ({ boardId, cards, columnId }) => {\n  const status = useSelector(selectStatusFilter);\n  const filteredCards = status.priority\n    ? cards.filter(card => card.priority === status.priority)\n    : cards;\n\n  return (\n    <CardListContainer>\n      <Scrollbars\n        hideTracksWhenNotNeeded={true}\n        renderTrackVertical={({ style, ...props }) => (\n          <TrackVertical\n            {...props}\n            style={{\n              ...style,\n            }}\n          />\n        )}\n        renderThumbVertical={({ style, ...props }) => (\n          <ThumbVertical\n            {...props}\n            style={{\n              ...style,\n            }}\n          />\n        )}\n      >\n        <CardListStyled>\n          {filteredCards.map(\n            ({ _id, title, description, priority, deadline, owner }, index) => {\n              return (\n                <Card\n                  key={_id}\n                  _id={_id}\n                  title={title}\n                  description={description}\n                  priority={priority}\n                  deadline={deadline}\n                  index={index}\n                  boardId={boardId}\n                  columnId={owner}\n                />\n              );\n            }\n          )}\n        </CardListStyled>\n      </Scrollbars>\n    </CardListContainer>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../../store/columns/operations';\nimport { useSelector } from 'react-redux';\nimport { selectColumns } from 'store/columns/selectors';\nimport { TaskForm } from './TaskForm';\nimport PropTypes from 'prop-types';\n\nexport const AddTasks = ({ boardId, columnId, closeModal, taskId, cardsNumber }) => {\n  const dispatch = useDispatch();\n\n  const columns = useSelector(selectColumns);\n  const currentColumn = columns.filter(val => val._id === columnId);\n  const index = currentColumn[0].cards.length;\n\n  const handleSubmit = async values => {\n    if (values.priority === 'without') values.deadline = new Date(0);\n    try {\n      await dispatch(addTask({ ...values, index, boardId, columnId, taskId }));\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <TaskForm onSubmit={handleSubmit} onClose={closeModal} isEditing={false} cardsNumber={cardsNumber} />\n  );\n};\n\nAddTasks.propTypes = {\n  boardId: PropTypes.string.isRequired,\n  columnId: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  taskId: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { deleteColumn } from '../../store/columns/operations';\nimport { useAskDeleteModal, useModal } from 'hooks/useModal';\nimport { Modal } from 'components/Modal';\nimport { ColumnForm } from './ColumnForm';\nimport {\n  ColumnContainer,\n  ColumnTitleContainer,\n  ColumnTitle,\n  IconContainer,\n} from './Column.styled';\nimport { CardList } from 'components/Card/CardList';\nimport { AddTasks } from 'components/AddTaskForm/AddTaskForm';\nimport { AskDeleteModal } from 'components/AskDeleteModal/AskDeleteModal';\nimport { PrimaryButton } from 'components/miniComponents/PrimaryButton/PrimaryButton';\nimport { IconAddEditDeleteModal } from 'components/miniComponents/IconAddEditDeleteModal/IconAddEditDeleteModal';\nimport { ButtonIcon } from 'components/miniComponents/ButtonIcon/ButtonIcon';\n\nexport const Column = ({ _id, title, cards, owner, index }) => {\n  const [titleColumn, setTitleColumn] = useState('Delete column?');\n  const [isEditCardMode, setIsEditCardMode] = useState(false);\n\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const { isAskDeleteModalOpen, openAskDeleteModal, closeAskDeleteModal } =\n    useAskDeleteModal();\n\n  const dispatch = useDispatch();\n\n  const handleDeleteColumnEmty = () => {\n    openAskDeleteModal();\n    switch (cards.length) {\n      case 0:\n        setTitleColumn(`Delete column \"${title}\"?`);\n        break;\n      case 1:\n        setTitleColumn(`Delete column \"${title}\" with one task?`);\n        break;\n      default:\n        setTitleColumn(`Delete column \"${title}\" with ${cards.length} tasks?`);\n    }\n  };\n\n  const handleDeleteColumnFull = () => {\n    dispatch(deleteColumn({ boardId: owner, columnId: _id }));\n    Notify.info(`The column ${title} was successfully deleted`);\n  };\n\n  const handleAddCardButtonClick = () => {\n    setIsEditCardMode(false);\n    openModal();\n  };\n\n  const handleEditCardButtonClick = () => {\n    setIsEditCardMode(true);\n    openModal();\n  };\n\n  return (\n    <ColumnContainer>\n      <ColumnTitleContainer>\n        <ColumnTitle>{title}</ColumnTitle>\n        <IconContainer>\n          <ButtonIcon\n            ariaLabel=\"edit\"\n            action={() => handleEditCardButtonClick(openModal)}\n            w={16}\n            h={16}\n            icon=\"pencil\"\n          />\n          <ButtonIcon\n            ariaLabel=\"delete\"\n            action={handleDeleteColumnEmty}\n            w={16}\n            h={16}\n            icon=\"trash\"\n          />\n        </IconContainer>\n      </ColumnTitleContainer>\n      {cards && <CardList boardId={owner} columnId={_id} cards={cards} />}\n      <PrimaryButton\n        type=\"button\"\n        action={handleAddCardButtonClick}\n        title=\"Add another card\"\n      >\n        <IconAddEditDeleteModal />\n      </PrimaryButton>\n      {isModalOpen && isEditCardMode && (\n        <Modal onClose={closeModal}>\n          <ColumnForm\n            id={_id}\n            boardId={owner}\n            onCloseForm={closeModal}\n            columnTitle={title}\n            isEditMode={true}\n          />\n        </Modal>\n      )}\n      {isModalOpen && !isEditCardMode && (\n        <Modal onClose={closeModal}>\n          <AddTasks\n            boardId={owner}\n            columnId={_id}\n            closeModal={closeModal}\n            index={index}\n            cardsNumber={cards.length}\n          />\n        </Modal>\n      )}\n      {isAskDeleteModalOpen && (\n        <Modal onClose={closeAskDeleteModal}>\n          <AskDeleteModal\n            onClick={closeAskDeleteModal}\n            handleDelete={handleDeleteColumnFull}\n            title={titleColumn}\n          />\n        </Modal>\n      )}\n    </ColumnContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ColumnListStyled = styled.div`\n  display: flex;\n  gap: 34px;\n  margin-right: 34px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Column } from '../MainDashboard/Column';\nimport { ColumnListStyled } from './ColunmList.styled';\nimport {\n  selectColumns,\n  selectIsLoading,\n  selectError,\n} from 'store/columns/selectors';\n\nimport { getColumns } from 'store/columns/operations';\nimport { Loader } from '../Loader/Loader';\n\nexport const ColumnList = ({ boardId }) => {\n  const dispatch = useDispatch();\n  const columns = useSelector(selectColumns);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  if (error) {\n    Notify.warning(error);\n  }\n\n  useEffect(() => {\n    if (!boardId) {\n      return;\n    }\n    dispatch(getColumns(boardId));\n  }, [boardId, dispatch]);\n\n  if (isLoading) {\n    return <Loader fill={'#fff'} />;\n  }\n\n  if (columns.length > 0) {\n    return (\n      <ColumnListStyled>\n        {columns.map(({ _id, title, createdAt, owner, cards }, index) => (\n          <Column\n            key={_id}\n            index={index}\n            owner={owner}\n            _id={_id}\n            title={title}\n            createdAt={createdAt}\n            cards={cards}\n          />\n        ))}\n      </ColumnListStyled>\n    );\n  }\n};\n","import styled from '@emotion/styled';\nimport { baseTransition, devices } from 'styles';\n\nexport const CreateBoardContainer = styled.div`\n  margin: auto;\n  text-align: center;\n  color: ${props => props.theme.colors.createBoardContainerColor};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.2;\n  letter-spacing: -0.28px;\n\n  @media screen and (${devices.tablet}) {\n    max-width: 486px;\n  }\n`;\n\nexport const CreateBoardButton = styled.button`\n  color: ${props => props.theme.colors.formAddButtonBackground};\n  font-family: Poppins;\n  transition: color ${baseTransition};\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.formAddButtonHover};\n  }\n`;\n","import React from 'react';\nimport { Modal } from '../Modal/Modal';\nimport { useModal } from 'hooks/useModal';\nimport MoodalForBoards from 'components/ModalForBoards/ModalForBoards';\n\nimport { CreateBoardContainer, CreateBoardButton } from './CreateBoard.styled';\n\nconst CreateBoard = () => {\n  const { isModalOpen, openModal, closeModal } = useModal();\n  return (\n    <>\n      <CreateBoardContainer>\n        Before starting your project, it is essential\n        <CreateBoardButton type=\"button\" onClick={openModal}>\n          to create a board\n        </CreateBoardButton>\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </CreateBoardContainer>\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <MoodalForBoards onClick={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default CreateBoard;\n","import styled from '@emotion/styled';\nimport { baseTransition, devices } from 'styles';\n\nexport const MainDashboardSection = styled.section`\n  position: relative;\n  background-color: ${props => props.theme.colors.background};\n  background-image: ${props =>\n    props.background !== 'default'\n      ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Mobile/${props.background}.jpg\")`\n      : 'none'};\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  @media screen and (${devices.retina}),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Mobile/${props.background}%402x.jpg\")`\n        : 'none'};\n  }\n\n  @media screen and (${devices.tablet}) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Tablet/${props.background}.jpg\")`\n        : 'none'};\n    @media screen and (${devices.retina}),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== 'default'\n          ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Tablet/${props.background}%402x.jpg\")`\n          : 'none'};\n    }\n  }\n\n  @media screen and (${devices.desktop}) {\n    background-image: ${props =>\n      props.background !== 'default'\n        ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Desktop/${props.background}.jpg\")`\n        : 'none'};\n    @media screen and (${devices.retina}),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== 'default'\n          ? `url(\"https://res.cloudinary.com/dt8h4kxqx/image/upload/v1691824162/TaskPro/Desktop/${props.background}.jpg\")`\n          : 'none'};\n    }\n  }\n`;\n\nexport const MainDashboardContainer = styled.div`\n  min-height: calc(100svh - 60px);\n  height: 100%;\n  padding: 74px 0 24px 0;\n  overflow-x: auto;\n  display: flex;\n\n  @media screen and (${devices.tablet}) {\n    min-height: calc(100svh - 68px);\n    gap: 34px;\n    padding: 80px 0 32px 0;\n  }\n\n  @media screen and (${devices.desktop}) {\n    min-height: calc(100vh - 68px);\n    padding: 48px 0 8px 0;\n  }\n`;\n\nexport const MainDashboardSectionTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\nexport const ContentWrapper = styled.div`\n  width: max-content;\n  height: 100%;\n  margin-right: 20px;\n\n  display: flex;\n  margin-left: 20px;\n\n  @media screen and (${devices.tablet}) {\n    margin-left: 32px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    margin-left: 24px;\n  }\n`;\n\nexport const MainDashboardAddColumnButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  min-width: 335px;\n  height: 56px;\n  padding: 14px 78px;\n  margin-right: 20px;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border-radius: 8px;\n  color: ${props => props.theme.colors.addColumnButtonColor};\n  background-color: ${props => props.theme.colors.addColumnButtonBackground};\n  transition: background ${baseTransition};\n  &:hover,\n  &:focus {\n    background: ${props => props.theme.colors.addColumnButtonHoverBackground};\n\n    @media screen and (${devices.tablet}) {\n      margin-right: 32px;\n    }\n\n    @media screen and (${devices.desktop}) {\n      margin-right: 24px;\n    }\n  }\n`;\n\nexport const MainDashboardIconContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  background-color: ${props => props.theme.colors.iconContainerBackground};\n  border-radius: 6px;\n`;\n\nexport const MainDashboardIcon = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: ${props => props.theme.colors.addColumnIconFill};\n`;\n\nexport const ContentHolder = styled.div`\n  width: 100%;\n`;\n\nexport const TrackHorizontal = styled.div`\n  min-height: 12px;\n  border-radius: 12px;\n  bottom: 0;\n  left: 20px;\n  right: 20px;\n  @media screen and (${devices.tablet}) {\n    left: 32px;\n    right: 32px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    left: 24px;\n    right: 24px;\n  }\n  background-color: ${props =>\n    props.theme.colors.mainTrackHorizontalBackground};\n`;\n\nexport const ThumbHorizontal = styled.div`\n  height: 12px;\n  border-radius: 12px;\n  background-color: ${props =>\n    props.theme.colors.mainThumbHorizontalBackground};\n`;\n","import styled from '@emotion/styled';\n\nimport { baseTransition } from 'styles';\n\nexport const FilterButton = styled.button`\n  position: relative;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  padding-left: 22px;\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.filterBtnColorSelected\n      : props.theme.colors.filterBtnColor};\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    transform: translateY(-50%);\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: ${props =>\n      props.text === 'Without priority'\n        ? props.theme.colors.filterWithoutPriorityColor\n        : props.color};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 1px;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    border: ${props => props.theme.colors.filterDecorativeElement};\n    opacity: ${props => (props.selected ? '1' : ' 0')};\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { FilterButton } from './StatusFilterButton.styled';\n\nconst StatusFilterButton = ({ selected, color, children, onClick }) => {\n  return (\n    <FilterButton\n      selected={selected}\n      type=\"button\"\n      onClick={onClick}\n      color={color}\n      text={children}\n    >\n      {children}\n    </FilterButton>\n  );\n};\n\nStatusFilterButton.propTypes = {\n  selected: PropTypes.bool.isRequired,\n  color: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default StatusFilterButton;\n","import styled from '@emotion/styled';\nimport { ModalContent } from 'components/Modal/Modal.styled';\n\nimport { baseTransition } from 'styles';\n\nexport const StatusFilterContainer = styled(ModalContent)`\n  max-width: 300px;\n`;\n\nexport const StatusFilterMainText = styled.p`\n  color: ${props => props.theme.colors.titleColor};\n  font-family: Poppins;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n  width: 100%;\n  padding-bottom: 14px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  margin-bottom: 14px;\n`;\n\nexport const StatusFilterBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const StatusFilterLabel = styled.p`\n  color: ${props => props.theme.colors.titleColor};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const StatusFilterShowAll = styled.button`\n  cursor: pointer;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.filterBtnColorSelected\n      : props.theme.colors.filterBtnColor};\n  transition: color ${baseTransition};\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.iconHover};\n  }\n`;\n\nexport const StatusFilterItem = styled.li`\n  &:not(:last-of-type) {\n    margin-bottom: 8px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectStatusFilter } from 'store/filter/selectors';\nimport { statusFilters } from 'store/filter/constants';\nimport { setStatusFilter } from 'store/filter/filterSlice';\nimport StatusFilterButton from 'components/StatusFilterButton';\n\nimport {\n  StatusFilterContainer,\n  StatusFilterMainText,\n  StatusFilterLabel,\n  StatusFilterBox,\n  StatusFilterShowAll,\n  StatusFilterItem,\n} from './StatusFilter.styled';\nimport { ButtonIcon } from 'components/miniComponents/ButtonIcon/ButtonIcon';\n\nconst options = [\n  {\n    text: 'Without priority',\n    color: 'rgba(255, 255, 255, 0.3)',\n  },\n  {\n    text: 'Low',\n    color: 'rgba(143, 161, 208, 1)',\n  },\n  {\n    text: 'Medium',\n    color: 'rgba(224, 156, 181, 1)',\n  },\n  {\n    text: 'High',\n    color: 'rgba(190, 219, 176, 1)',\n  },\n];\n\nconst StatusFilter = ({ onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  const onChangeFilterClick = text => {\n    switch (text) {\n      case 'Without priority':\n        return handleFilterChange(statusFilters.none);\n      case 'Show all':\n        return handleFilterChange(statusFilters.all);\n      case 'Low':\n        return handleFilterChange(statusFilters.low);\n      case 'Medium':\n        return handleFilterChange(statusFilters.medium);\n      case 'High':\n        return handleFilterChange(statusFilters.high);\n      default:\n        return;\n    }\n  };\n\n  const filter = useSelector(selectStatusFilter);\n\n  return (\n    <StatusFilterContainer>\n      <ButtonIcon\n        action={onClose}\n        style={{\n          position: 'absolute',\n          top: '14px',\n          right: '14px',\n        }}\n      />\n      <StatusFilterMainText>Filter</StatusFilterMainText>\n      <StatusFilterBox>\n        <StatusFilterLabel>Label color</StatusFilterLabel>\n\n        <StatusFilterShowAll\n          type=\"button\"\n          selected={!filter.priority}\n          onClick={() => onChangeFilterClick('Show all')}\n        >\n          Show all\n        </StatusFilterShowAll>\n      </StatusFilterBox>\n      <ul>\n        {options.map(({ text, color }, index) => (\n          <StatusFilterItem key={index}>\n            <StatusFilterButton\n              selected={filter.statusText === text}\n              onClick={() => onChangeFilterClick(text)}\n              color={color}\n            >\n              {text}\n            </StatusFilterButton>\n          </StatusFilterItem>\n        ))}\n      </ul>\n    </StatusFilterContainer>\n  );\n};\n\nStatusFilter.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default StatusFilter;\n","import styled from '@emotion/styled';\n\nimport { devices, baseTransition } from 'styles';\n\nexport const DashboardHeaderTitle = styled.h2`\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  color: ${props => props.theme.colors.titleColor};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.5;\n  letter-spacing: -0.28px;\n  background-color: ${props =>\n    props.dashboard.background === 'default'\n      ? 'transparent'\n      : props.theme.colors.filterBgd};\n  border-radius: 10px;\n\n  @media screen and (${devices.tablet}) {\n    font-size: 18px;\n    letter-spacing: -0.36px;\n    top: 24px;\n    left: 32px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    top: 10px;\n    left: 24px;\n  }\n`;\n\nexport const DashboardHeaderFilter = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  color: ${props => props.theme.colors.filterColor};\n  fill: currentColor;\n  transition: color ${baseTransition}, box-shadow ${baseTransition};\n\n  background-color: ${props => {\n    if (!props.dashboard) return 'none';\n\n    return props.dashboard && props.dashboard.background === 'default'\n      ? 'transparent'\n      : props.theme.colors.filterBgd;\n  }};\n  padding: 4px 8px;\n  border-radius: 10px;\n\n  @media screen and (${devices.tablet}) {\n    top: 16px;\n    right: 24px;\n  }\n\n  @media screen and (${devices.desktop}) {\n    top: 10px;\n    right: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${props => {\n      if (props.disabled) return;\n      return props.theme.colors.iconHover;\n    }};\n    box-shadow: ${props => {\n      if (props.dashboard === null) return 'none';\n\n      return props.dashboard && props.dashboard.background === 'default'\n        ? 'none'\n        : props.theme.colors.filterShadow;\n    }};\n  }\n`;\n\nexport const DashboardHeaderText = styled.p`\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  margin-left: 8px;\n`;\n","import { useModal } from 'hooks/useModal';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from 'components/Modal/Modal';\nimport StatusFilter from 'components/StatusFilter';\nimport { Svg } from 'components/SvgIcon/SvgIcon';\n\nimport {\n  DashboardHeaderFilter,\n  DashboardHeaderText,\n  DashboardHeaderTitle,\n} from './DashboardHeader.styled';\n\nconst DashboardHeader = ({ name, disabled, dashboard }) => {\n  const { isModalOpen, closeModal, openModal } = useModal();\n  return (\n    <>\n      {name && (\n        <DashboardHeaderTitle dashboard={dashboard}>\n          {name}\n        </DashboardHeaderTitle>\n      )}\n\n      <DashboardHeaderFilter\n        dashboard={dashboard}\n        type=\"button\"\n        onClick={openModal}\n        disabled={disabled}\n      >\n        <Svg w={16} h={16} icon='filter' />\n        <DashboardHeaderText>Filters</DashboardHeaderText>\n      </DashboardHeaderFilter>\n\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <StatusFilter onClose={closeModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nDashboardHeader.propTypes = {\n  name: PropTypes.string,\n  disabled: PropTypes.bool.isRequired,\n  dashboard: PropTypes.shape({\n    background: PropTypes.string.isRequired,\n  }),\n};\n\nexport default DashboardHeader;\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useModal } from 'hooks/useModal';\nimport { Modal } from 'components/Modal';\nimport { ColumnForm } from '../../components/MainDashboard/ColumnForm';\nimport { ColumnList } from '../../components/MainDashboard/ColunmList';\nimport CreateBoard from '../../components/MainDashboard/CreateBoard';\nimport sprite from '../../img/icons/sprite.svg';\nimport {\n  MainDashboardContainer,\n  MainDashboardSection,\n  MainDashboardSectionTitle,\n  MainDashboardAddColumnButton,\n  MainDashboardIconContainer,\n  MainDashboardIcon,\n  ContentHolder,\n  ContentWrapper,\n  TrackHorizontal,\n  ThumbHorizontal,\n} from './MainDashboard.styled';\nimport DashboardHeader from 'components/DashboardHeader/DashboardHeader';\nimport { selectBoardsState } from 'store/boards/selectors';\nimport { selectColumns } from 'store/columns/selectors';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\nconst MainDashboard = () => {\n  const { boardName } = useParams();\n  const { isModalOpen, closeModal, openModal } = useModal();\n  const { boards } = useSelector(selectBoardsState);\n  const selectedBoard = boardName\n    ? boards.find(board => board.title === boardName.trim())\n    : null;\n\n  const columns = useSelector(selectColumns);\n  const hasCards = columns.some(column => column.cards.length > 0);\n\n  return (\n    <MainDashboardSection background={selectedBoard?.background || 'default'}>\n      <DashboardHeader\n        name={selectedBoard?.title}\n        disabled={!hasCards}\n        dashboard={selectedBoard}\n      />\n      <MainDashboardContainer>\n        {boardName ? (\n          <>\n            <MainDashboardSectionTitle>\n              Columns with tasks\n            </MainDashboardSectionTitle>\n            <ContentHolder>\n              <Scrollbars\n                hideTracksWhenNotNeeded={true}\n                renderTrackHorizontal={({ style, ...props }) => (\n                  <TrackHorizontal\n                    {...props}\n                    style={{\n                      ...style,\n                    }}\n                  />\n                )}\n                renderThumbHorizontal={({ style, ...props }) => (\n                  <ThumbHorizontal\n                    {...props}\n                    style={{\n                      ...style,\n                    }}\n                  />\n                )}\n              >\n                <ContentWrapper>\n                  <ColumnList boardId={selectedBoard?._id} />\n                  <MainDashboardAddColumnButton\n                    type=\"button\"\n                    onClick={openModal}\n                  >\n                    <MainDashboardIconContainer>\n                      <MainDashboardIcon>\n                        <use href={`${sprite}#icon-plus`}></use>\n                      </MainDashboardIcon>\n                    </MainDashboardIconContainer>\n                    <div>Add another column</div>\n                  </MainDashboardAddColumnButton>\n                </ContentWrapper>\n              </Scrollbars>\n            </ContentHolder>\n            {isModalOpen && (\n              <Modal onClose={closeModal}>\n                <ColumnForm\n                  onCloseForm={closeModal}\n                  boardId={selectedBoard?._id}\n                />\n              </Modal>\n            )}\n          </>\n        ) : (\n          <CreateBoard />\n        )}\n      </MainDashboardContainer>\n    </MainDashboardSection>\n  );\n};\n\nexport default MainDashboard;\n"],"names":["FormTitle","styled","props","theme","colors","formTitleColor","FormInput","Field","formInputColor","formInputBackground","formInputBorderColor","baseTransition","ValidationError","TitleContainer","ColumnFormSchema","Yup","shape","title","min","max","ColumnForm","id","boardId","isEditMode","onCloseForm","columnTitle","dispatch","useDispatch","index","useSelector","selectColumns","length","buttonText","icon","ButtonIcon","action","style","position","top","right","initialValues","validationSchema","onSubmit","values","actions","resetForm","editColumn","addColumn","handleSubmit","errors","touched","name","placeholder","PrimaryButton","IconAddEditDeleteModal","ColumnContainer","ColumnTitleContainer","card","ColumnTitle","titleColor","IconContainer","iconFill","iconHover","CardListContainer","devices","CardListStyled","TrackVertical","columnTrackVerticalBackground","ThumbVertical","columnThumbVerticalBackground","CardStyled","priority","color","CardTitleStyled","cardMajorText","CardDescriptionStyled","cardMinorText","CardFooter","cardDecor","CardParamsWrapper","CardParamsTitle","PriorityStatus","DeadlineDate","ToolsWrapper","ToolsButtonBell","pastDeadline","StyledP","StyledInput","btnAddBoard","StyledTextArea","StyledTitelBtn","Container","RadioGroup","RadioLabel","RadioInput","filterDecorativeElement","checked","StyledTitleDeadline","StyledFormikTitleNotification","btnAddColumn","StyledFormikDescriptionNotification","StyledFormikColorNotification","DatePickerContainer","calendarBackGround","calendarNumberColor","calendarSelectedColor","DatePickerBtn","priorities","TaskForm","initialTitle","description","initialDescription","initialPriority","initialDeadline","deadline","onClose","isEditing","cardsNumber","startDate","Date","setDate","getDate","useState","setDeadline","deadlinePickerRef","useRef","required","console","error","formik","useFormik","formattedDeadline","moment","format","formattedDate","CurrentDate","updateDeadline","ariaLabel","type","value","onChange","handleChange","map","className","disabled","onClick","current","setOpen","width","height","role","marginLeft","fill","xlinkHref","sprite","ref","selected","date","setFieldValue","locale","dateFormat","showTimeSelect","customInput","minDate","EditTask","columnId","closeModal","taskId","editTask","Card","forwardRef","_id","taskData","rest","isEditModalOpen","setIsEditModalOpen","useAskDeleteModal","isAskDeleteModalOpen","openAskDeleteModal","closeAskDeleteModal","titleCard","setTitleCard","closeEditModal","isBefore","w","h","Modal","AskDeleteModal","handleDelete","deleteTask","selectStatusFilter","state","filters","status","CardList","cards","filteredCards","filter","hideTracksWhenNotNeeded","renderTrackVertical","renderThumbVertical","owner","AddTasks","val","addTask","Column","titleColumn","setTitleColumn","isEditCardMode","setIsEditCardMode","useModal","isModalOpen","openModal","deleteColumn","Notify","ColumnListStyled","ColumnList","columns","isLoading","selectIsLoading","selectError","useEffect","getColumns","Loader","createdAt","CreateBoardContainer","createBoardContainerColor","CreateBoardButton","formAddButtonBackground","formAddButtonHover","MainDashboardSection","background","MainDashboardContainer","MainDashboardSectionTitle","ContentWrapper","MainDashboardAddColumnButton","addColumnButtonColor","addColumnButtonBackground","addColumnButtonHoverBackground","MainDashboardIconContainer","iconContainerBackground","MainDashboardIcon","addColumnIconFill","ContentHolder","TrackHorizontal","mainTrackHorizontalBackground","ThumbHorizontal","mainThumbHorizontalBackground","FilterButton","filterBtnColorSelected","filterBtnColor","text","filterWithoutPriorityColor","children","StatusFilterContainer","ModalContent","StatusFilterMainText","StatusFilterBox","StatusFilterLabel","StatusFilterShowAll","StatusFilterItem","options","handleFilterChange","setStatusFilter","onChangeFilterClick","statusFilters","statusText","DashboardHeaderTitle","dashboard","filterBgd","DashboardHeaderFilter","filterColor","filterShadow","DashboardHeaderText","boardName","useParams","boards","selectBoardsState","selectedBoard","find","board","trim","hasCards","some","column","renderTrackHorizontal","renderThumbHorizontal","href"],"sourceRoot":""}